#include "LoadGraph.h"

Graph<int> LoadGraph::createGraph(const string &nodes, const string &edges, const string &connections){
	Graph <int>  a;


	return a;
}

vector <Node> LoadGraph::loadNodes(const string &nodes){
	vector<Node> ret;
	ifstream input(nodes);

	for( string line; getline( input, line ); ){
		int in = 0,comp = 0,var = 0;
		Node temp;

		for(unsigned int i = 0; i<line.size(); i++){
			if(line[i]==';'){
				if(var == 0){
					temp.node_id = abs(atoi((line.substr(in,comp)).c_str()));
					in = i+1;
					comp = 0;
					var++;
				}else if(var == 1){
					temp.lat_deg = atof((line.substr(in,comp)).c_str());
					in = i+1;
					comp = 0;
					var++;
				}else if(var == 2){
					temp.long_deg = atof((line.substr(in,comp)).c_str());
					in = i+1;
					comp = 0;
					var++;
				}else if(var == 3){
					temp.long_rad = atof((line.substr(in,comp)).c_str());
					in = i+1;
					comp = 0;
					var++;
				}
			}else if(var == 4){
				temp.lat_rad = atof((line.substr(in,line.size()-1)).c_str());
				break;
			}else
				comp++;
		}
		ret.push_back(temp);
	}
	return ret;
}

vector <Road> LoadGraph::loadRoads(const string &roads){

}

vector <Connect> LoadGraph::loadConnections(const string &connections){

}

double LoadGraph::degToCartLat(double coord){
	double ret = 0, maxWin=WINDOW_SIZE;

	double lat_min = 41.1890;
	double lat_max = 41.1686;

	double dLat = lat_max - lat_min;

	ret = ((coord - lat_min) * maxWin)/dLat;

	return ret;
}

double LoadGraph::degToCartLong(double coord){
	double ret = 0, maxWin=WINDOW_SIZE;

	double long_min = -8.6225;
	double long_max = -8.5843;

	double dLong = long_max - long_min;


	ret = ((coord - long_min) * maxWin)/dLong;
	return ret;
}

double LoadGraph::distance(double aLat,double aLong,double bLat,double bLong){
	double ax = degToCartLong(aLong);
	double ay = degToCartLat(aLat);
	double bx = degToCartLong(bLong);
	double by = degToCartLong(bLat);

	return sqrt( pow((bx-ax),2) + pow((by-ay),2));
}
