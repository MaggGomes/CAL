#ifndef MATCHER_H_
#define MATCHER_H_

#include <string>
#include <vector>
#include <iostream>
#include <algorithm>
#include <fstream>
#include <sstream>
#include <functional>
#include "Student.h"
#include "Utilities.h"
using namespace std;

/**
 * @brief Converts a string to lowercase
 *
 * @param string to be converted
 * @return string converted
 */
string toLowerString(string s);

void pre_kmp(string pattern, vector<int> & prefix);

int kmp(string text, string pattern);

int numStringMatching(string filename,string toSearch);

int editDistance(string pattern, string text);

float numApproximateStringMatching(string filename,string toSearch);

template <typename T>
void foo(vector<T *> vec) {
	return;
}

template <typename T>
void updateResultsStudent1(const string &pattern, vector <T *> &students, const cmpFunctions &funcs);

void updateResultsStudentName(const string &pattern, vector <Student *> &students, const cmpFunctions &funcs);

void updateResultsStudentName(const string &pattern, vector <Student *> &students, const cmpFunctions &funcs);

#endif // MATCHER_H_
